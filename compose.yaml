version: '3'
services:
  controller_container:
    image: ${IMAGE}:${TAG}
    container_name: p3at_controller
    network_mode: host
    build:
      context: .
      target: common
    devices: [ "/dev/input/js0:/dev/input/js0" ]
    command: ros2 launch p3at_controller controller.launch.py
    # command: ros2 run p3at_test_pkg test_node
    volumes:
      - type: bind
        source: /dev/shm
        target: /dev/shm

  low_level_container:
    image: ${IMAGE}:${TAG}
    container_name: p3at_low_level
    network_mode: host
    devices: ["/dev/ttyUSB0:/dev/ttyS0"]
    build:
      context: .
      target: common
    command: ros2 run ariaNode ariaNode -rp /dev/ttyS0
    volumes:
      - type: bind
        source: /dev/shm
        target: /dev/shm

  display_container:
    image: ${IMAGE}:${TAG}
    container_name: p3at_display
    network_mode: host
    environment:
      - DISPLAY
      # - XAUTHORITY
    build:
      context: .
      target: common
    command: ros2 launch p3at_bringup display.launch.py
    # privileged: True
    volumes:
      # - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
      - type: bind
        source: /dev/shm
        target: /dev/shm

  sensors_container:
    image: ${IMAGE}:${TAG}
    container_name: p3at_sensors
    network_mode: host
    devices:
      - "/dev/bus/usb:/dev/bus/usb"
    build:
      context: .
      target: common
    command: ros2 launch p3at_bringup spatial.launch.py
    volumes:
      - type: bind
        source: /dev/shm
        target: /dev/shm
      - type: bind
        source: /dev
        target: /dev
      - type: bind
        source: /dev/bus/usb
        target: /dev/bus/usb

  lidar_container:
    image: ${IMAGE}:${TAG}
    container_name: p3at_lidar
    network_mode: host
    build:
      context: .
      target: common
    command: ros2 launch p3at_bringup lidar.launch.py
    volumes:
      - type: bind
        source: /dev/shm
        target: /dev/shm
    devices:
      - "/dev/bus/usb:/dev/bus/usb"
  
  # vision_container:
  #   image: ${IMAGE}:${TAG}
  #   container_name: p3at_vision
  #   network_mode: host
  #   devices:
  #     - "/dev/bus/usb:/dev/bus/usb"
  #     # - "c 189:* rmw"
  #   build:
  #     context: .
  #     target: common
  #   command: ros2 launch depthai_ros_driver rgbd_pcl.launch.py
  #   environment:
  #     - DISPLAY
  #     - QT_X11_NO_MITSHM=1
  #     - XAUTHORITY
  #   volumes:
  #     - type: bind
  #       source: /dev/shm
  #       target: /dev/shm
  #     - type: bind
  #       source: /dev
  #       target: /dev
  #     - type: bind
  #       source: /dev/bus/usb
  #       target: /dev/bus/usb
  #     - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #     - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
  #   privileged: True
  #   device_cgroup_rules:
  #     - "c 189:* rmw"
  
  recognition_container:
    image: ${IMAGE}:${TAG}
    container_name: p3at_recognition
    network_mode: host
    devices:
      - "/dev/bus/usb:/dev/bus/usb"
      # - "c 189:* rmw"
    build:
      context: .
      target: common
    command: ros2 launch p3at_vision vision.launch.py
    environment:
      - DISPLAY
      - QT_X11_NO_MITSHM=1
      - XAUTHORITY
    volumes:
      - type: bind
        source: /dev/shm
        target: /dev/shm
      - type: bind
        source: /dev
        target: /dev
      - type: bind
        source: /dev/bus/usb
        target: /dev/bus/usb
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
    privileged: True
    device_cgroup_rules:
      - "c 189:* rmw"
      